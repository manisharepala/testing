.container{style:'margin-top:4%;'}
  %ul.nav.nav-pills.nav-justified.edit_space
    %li.active
      %a{"data-toggle" => "pill", :href => '#question'}='Edit Question'
    %li
      %a{"data-toggle" => "pill", :href => '#tags'}='Edit Tags'

  .tab-content{style:'margin-top:1%;'}
    #question.tab-pane.fade.in.active
      = simple_form_for @question, :url => assessment_question_update_path(id:@question.id, qtype:@question.qtype), :method => :post do |f|
        %table.table-striped.table-bordered{style:"width: 100%;"}
          %tbody
            %tr
              %th.text-center= f.label :question_text
            %tr
              %td
                - @question.question_language_specific_datas.each_with_index do |question_language_specific_data, i|
                  = f.simple_fields_for :question_language_specific_datas, question_language_specific_data do |qd|
                    %tr
                      %td.text-center{style:"width:10%;"}
                      %td
                        - if(question_language_specific_data.language == Language::ENGLISH)
                          = qd.cktext_area :question_text, :class => "form-control", required:true, :class => "form-control", required:true, :ckeditor => {:toolbar =>    'Full'}, :ckeditor => { :height => 200 },value:(Question.get_updated_text(question_language_specific_data.question_text)).html_safe
                          %tr
                            %th.text-center Explanation
                          %tr
                            %td.text-center{style:"width:10%;"}
                            %td
                              = qd.cktext_area :general_feedback, :class => "form-control", required:true, :class => "form-control", required:true, :ckeditor => {:toolbar =>    'Full'}, :ckeditor => { :height => 200 },value:(Question.get_updated_text(question_language_specific_data.general_feedback)).html_safe
                          %tr
                            %th.text-center Hint
                          %tr
                            %td.text-center{style:"width:10%;"}
                            %td
                              = qd.cktext_area :hint, :class => "form-control", required:true, :class => "form-control", required:true, :ckeditor => {:toolbar =>    'Full'}, :ckeditor => { :height => 200 },value:(Question.get_updated_text(question_language_specific_data.hint)).html_safe
            %tr
              %th.text-center{style: "height: 3.5em"} Options
            %tr
              %td
                - if @question.qtype == 'SmcqQuestion' || @question.qtype == 'MmcqQuestion' || @question.qtype == 'TrueFalseQuestion'
                  - @question.question_answers.each_with_index do |question_answer, i|
                    = f.simple_fields_for :question_answers, question_answer do |qa|
                      %tr
                        %td.text-center{style:"width:10%;"}
                          - if @question.qtype == 'SmcqQuestion' || @question.qtype == 'TrueFalseQuestion'
                            =qa.check_box :fraction, :checked => (question_answer.fraction == true) ? true : false, class: 'SmcqQuestions'
                          - else
                            =qa.check_box :fraction, :checked => (question_answer.fraction == true) ? true : false
                        %td= qa.cktext_area :answer_english, :class => "form-control", required:true, :ckeditor => { :height => 100 },value:(Question.get_updated_text(question_answer.answer_english)).html_safe
            %tr
              %th.text-center Marks
              %td= f.text_area :default_mark
        %br

        = f.submit class:'btn btn-default'
        %br
        %br

    #tags.tab-pane.fade
      = simple_form_for :tag, url: assessment_all_quizzes_path do |f|
        .form-group
          = f.input :course, :collection => @tags['course'].map{|t| [t['value'],t['guid']]},include_blank: false, selected:@current_tags['course'], input_html: { class: 'btn btn-default option_style' }
          = f.input :grade, :collection => @tags['grade'].map{|t| [t['value'],t['guid']]},include_blank: false, selected:@current_tags['grade'], input_html: { class: 'btn btn-default option_style' }
          = f.input :subject, :collection => @tags['subject'].map{|t| [t['value'],t['guid']]},include_blank: false, selected:@current_tags['subject'], input_html: { class: 'btn btn-default option_style' }
          = f.input :chapter, :collection => @tags['chapter'].map{|t| [t['value'],t['guid']]},include_blank: false, selected:@current_tags['chapter'], input_html: { class: 'btn btn-default option_style' }
          = f.input :concept, :collection => @tags['concept'].map{|t| [t['value'],t['guid']]},include_blank: false, selected:@current_tags['concept'], input_html: { class: 'btn btn-default option_style' }
          = f.input :difficulty_level, :collection => @tags['difficulty_level'].map{|t| [t['value'],t['guid']]},include_blank: false, selected:@current_tags['difficulty_level'], input_html: { class: 'btn btn-default option_style' }
          = f.input :blooms_taxonomy, :collection => @tags['blooms_taxonomy'].map{|t| [t['value'],t['guid']]},include_blank: false, selected:@current_tags['blooms_taxonomy'], input_html: { class: 'btn btn-default option_style' }

        %button.btn#update_tags{:type => "button", style:'margin-top:0%;'} Update Tags


:css
  #question textarea {
      width: 100%;
      padding: 1.5%;
  }
  #question select{
      padding: .6% 2%;
      border-radius: 5%;
      font-size: 1.3em;
  }
  #question select option{
      font-size: 1.3em;
  }
  .edit_space a {
    background-color: #eee;
    color: #000000;
    margin: 2%;
  }
  .edit_space.nav-pills > li.active > a {
    color: #000;
    background-color: grey !important;
  }

  .option_style {
    margin: 0.8%;
    width: 100%;
  }
:javascript
  $('.SmcqQuestions').on ('change',function () {
   $('.SmcqQuestions').not(this).prop('checked', false);
  });

  get_tags_for_course = () => {
    let guid = $('#tag_course').val();
    $.post('/get_child_tags', {guid: guid}, function(data, status){
      if(status=='success'){
        let grades = data['grade'];
        let subjects = data['subject'];
        let chapters = data['chapter'];
        let concepts = data['concept']
        update_tags('tag_grade', grades)
        update_tags('tag_subject', subjects)
        update_tags('tag_chapter', chapters)
        update_tags('tag_concept', concepts)
      }
    });
  }

  get_tags_for_grade = () => {
    let guid = $('#tag_grade').val();
    $.post('/get_child_tags', {guid: guid}, function(data, status){
      if(status=='success'){
        let subjects = data['subject'];
        let chapters = data['chapter'];
        let concepts = data['concept']
        update_tags('tag_subject', subjects)
        update_tags('tag_chapter', chapters)
        update_tags('tag_concept', concepts)
      }
    });
  }

  get_tags_for_subject = () => {
    let guid = $('#tag_subject').val();
    $.post('/get_child_tags', {guid: guid}, function(data, status){
      if(status=='success'){
        let chapters = data['chapter'];
        let concepts = data['concept']
        update_tags('tag_chapter', chapters)
        update_tags('tag_concept', concepts)
      }
    });
  }

  get_tags_for_chapter = () => {
    let guid = $('#tag_chapter').val();
    $.post('/get_child_tags', {guid: guid}, function(data, status){
      if(status=='success'){
        let concepts = data['concept']
        update_tags('tag_concept', concepts)
      }
    });
  }

  update_tags = (id, tags) => {
    var $el = $("#"+id);
    $el.empty();
    for( i=0;i<tags.length;i++){
      $el.append($("<option></option>").attr("value",tags[i]['guid']).text(tags[i]['value']));
    }
  }

  $('#tag_course').change(get_tags_for_course);
  $('#tag_grade').change(get_tags_for_grade);
  $('#tag_subject').change(get_tags_for_subject);
  $('#tag_chapter').change(get_tags_for_chapter);


  $("#update_tags").on("click", function() {
    $('#loading_overlay').css('display', 'block');
    var course_guid = $('#tag_course').val();
    var grade_guid = $('#tag_grade').val();
    var subject_guid = $('#tag_subject').val();
    var chapter_guid = $('#tag_chapter').val();
    var concept_guid = $('#tag_concept').val();
    var difficulty_level_guid = $('#tag_difficulty_level').val();
    var blooms_taxonomy_guid = $('#tag_blooms_taxonomy').val();
    var question_id = "#{@question.id}";

    $.ajax({//Make the Ajax Request
        type: "GET",
        dataType: 'script',
        url: "/update_question_tags/?course_guid=" + course_guid+"&grade_guid="+grade_guid+"&subject_guid="+subject_guid+"&chapter_guid="+chapter_guid+"&concept_guid="+concept_guid+"&difficulty_level_guid="+difficulty_level_guid+"&blooms_taxonomy_guid="+blooms_taxonomy_guid+"&question_id="+question_id,
        success: function(data){
          alert('Success');
        },
        error: function(data){
          alert('something went wrong try later');
        }
    });

  });
